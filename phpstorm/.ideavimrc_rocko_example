
"-------settings--------"
set surround = 1
set tags=tags,tags.vendor
set rnu
" set <leader> to <\>
let mapleader="\"

autocmd BufWritePost *.rb silent !ctags -R --languages=ruby --exclude=.git --exclude=log . $(bundle list --paths)

" class name space 整理
nmap zr gg/use<CR>V/class<CR>?use<CR>
imap zr <ESC>gg/use<CR>V/class<CR>?use<CR>

nmap <leader>s :source ~/.ideavimrc <CR>
imap <leader>l <End>
nmap <leader>1 :action ActivateProjectToolWindow<CR>
nmap <leader><ESC> :action HideAllWindows<CR>
nmap <leader>pcf zz:action ReformatCode<CR>:action Rerun<CR>
imap <leader>pcf <Esc>zz:action ReformatCode<CR>:action Rerun<CR>

nmap <C-t> :action Back<CR>
imap <C-t> <Esc>:action Back<CR>
nmap zj :action Forward<CR>
imap zj <Esc>:action Forward<CR>
nmap zn :action GotoNextError<CR>
" nmap zf :action GotoDeclaration<CR>
" imap zf <Esc>:action GotoDeclaration<CR>
nmap zgc zz:action CheckinProject<CR>

map zrr :action RenameElement<CR>

map zri :action Inline<CR>
imap zri <Esc>:action Inline<CR>
map zrf :action IntroduceField<CR>
imap zrf <Esc>:action IntroduceField<CR>
map zrp :action IntroduceParameter<CR>
imap zrp <Esc>:action IntroduceParameter<CR>

nmap zsp vi':<bs><bs><bs><bs><bs>action IntroduceParameter<CR>

map zrv :action IntroduceVariable<CR>
vmap zrv <Esc>:action IntroduceVariable<CR>
imap zrv <Esc>:action IntroduceVariable<CR>
nmap zrm :action ExtractMethod<CR>
vmap zrm :action ExtractMethod<CR>
vmap M :action ExtractMethod<CR>
map zrt :action SearchEverywhere<CR>
imap zrt <Esc>:action SearchEverywhere<CR>
map zro :action Move<CR>
imap zro <Esc>:action Move<CR>
map <C-D> :action EditorDuplicateLines<CR>
imap <C-D> <Esc>:action EditorDuplicateLines<CR>
map <C-A-K> :action MoveLineUp<CR>:action VimAutoIndentLines<CR>
imap <C-A-K> <Esc>:action MoveLineUp<CR>:action VimAutoIndentLines<CR>
map <C-A-J> :action MoveLineDown<CR>:action VimAutoIndentLines<CR>
imap <C-A-J> <Esc>:action MoveLineDown<CR>:action VimAutoIndentLines<CR>
map <A-D> :action EditorDeleteLine<CR>
imap <A-D> <Esc>:action EditorDeleteLine<CR>
:nmap ,m :action FileStructurePopup<CR>

:nmap zcc ci'
:nmap zaa ca'
nmap <A-u> :redo<CR>
vmap S :action SurroundWith<CR>

nmap <F1> mb?}<CR>V%{y`bP/function<CR>f_lzz
